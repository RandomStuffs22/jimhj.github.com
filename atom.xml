<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Huangjin's Blog]]></title>
  <link href="http://jimhj.github.com/atom.xml" rel="self"/>
  <link href="http://jimhj.github.com/"/>
  <updated>2013-01-31T21:16:05+08:00</updated>
  <id>http://jimhj.github.com/</id>
  <author>
    <name><![CDATA[Jimmy Huangjin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用Faraday上传图片到新浪微博]]></title>
    <link href="http://jimhj.github.com/blog/2013/01/31/shi-yong-faradayshang-chuan-tu-pian-dao-xin-lang-wei-bo/"/>
    <updated>2013-01-31T20:48:00+08:00</updated>
    <id>http://jimhj.github.com/blog/2013/01/31/shi-yong-faradayshang-chuan-tu-pian-dao-xin-lang-wei-bo</id>
    <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/lostisland/faraday">Faraday</a> 是一个轻量灵活的 HTTP client.使用 Faraday 可以轻松的帮助我们上传含图片内容的信息到新浪微博。</p></blockquote>

<p>新浪微博的 <code>statuses/upload</code> 接口要求请求必须是 <code>multipart/form-data</code> 编码格式，并且 <code>pic</code> 参数为 <code>binary</code> 类型。<a href="https://github.com/lostisland/faraday">Faraday</a> 几乎为我们实现了所有的要求，我们不需要自己来拼接这种请求报头和报文，下面是我的一个实例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>conn = Faraday.new(:url =&gt; 'https://upload.api.weibo.com') do |faraday|
</span><span class='line'>  faraday.request :multipart
</span><span class='line'>  faraday.adapter :net_http
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>conn.post "/2/statuses/upload.json", {
</span><span class='line'>  :access_token =&gt; topic.user.weibo_token,
</span><span class='line'>  :status =&gt; URI.encode(status),
</span><span class='line'>  :pic =&gt; Faraday::UploadIO.new(pic_path, 'image/jpeg')
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[最近有点不开心]]></title>
    <link href="http://jimhj.github.com/blog/2012/12/19/zui-jin-you-dian-bu-kai-xin/"/>
    <updated>2012-12-19T12:09:00+08:00</updated>
    <id>http://jimhj.github.com/blog/2012/12/19/zui-jin-you-dian-bu-kai-xin</id>
    <content type="html"><![CDATA[<p>吐槽开始。</p>

<p>换了新工作3个多月了，虽然薪水涨了不少，但是心情却反而不如在之前的公司，仔细想了一下原因大概如下：</p>

<p>  1.原来我一直喜欢的是很有GEEK氛围的团队，虽然之前我认为自己不够GEEK，但是到了新公司发现自己还算这里比较GEEK.
这边可能是属于传统的软件开发公司，比较刻板，项目驱动，每天都有人催，大家也就自然没有闲情逸致去发现新的技术或者是有意思或者新奇的东西。</p>

<p>  2.团队交流太少。平常在工作的时候，可能是由于各自负责的项目过于分散，大家很少说话，即便开玩笑。
还有的细节比如吃饭，下班啊什么的，都是各走各的，也不怎么打招呼。我还记得我刚来的时候，甚至是在我的提议下，大家才各自做了一下自我介绍。</p>

<p>  3.造成以上的状况的原因很可能是Leader情商不高，这个就不多抱怨啦，性格使然。</p>

<p>  4.对写代码的追求。这边几乎没人关心代码风格，架构什么的，完成功能就行。这恰恰是我最痛苦的地方。每天看着一坨一坨又臭又长的代码&#8230;</p>

<p>  5.需求过多，工程师从来都是被命令式的做项目，真正成了一个码农。很少参与需求讨论，不爽&#8230;</p>

<p>  &#8230;&#8230;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Update MongoDB to newest stable version]]></title>
    <link href="http://jimhj.github.com/blog/2012/11/17/update-mongodb-to-newest-stable-version/"/>
    <updated>2012-11-17T18:57:00+08:00</updated>
    <id>http://jimhj.github.com/blog/2012/11/17/update-mongodb-to-newest-stable-version</id>
    <content type="html"><![CDATA[<p>如果你是在Ubuntu下 sudo apt-get install mongodb, 很不幸，你很有可能会得到一堆错误，具体原因和解决办法如下:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  The Ubuntu repositories have a very old version of mongoDB - the current stable branch is 2.0 at the time of writing and yours is 1.6, 
</span><span class='line'>  you could try fixing the error but it's not really worth it. 
</span><span class='line'>  You should get an up to date version from the official 10gen repos as described here and uninstall the one you have now:</span></code></pre></td></tr></table></div></figure>


<p>解决办法参考下面：
<a href="http://www.mongodb.org/display/DOCS/Ubuntu+and+Debian+packages">http://www.mongodb.org/display/DOCS/Ubuntu+and+Debian+packages</a></p>

<h5>General procedure would be:</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  Remove Ubuntu version (apt-get remove mongodb)
</span><span class='line'>  Add new repo line and gpg key as described above
</span><span class='line'>  Install 10gen version (apt-get update; apt-get install mongodb-10gen)</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解决 redis-search 在 Passenger 下的 reconnect 错误]]></title>
    <link href="http://jimhj.github.com/blog/2012/11/17/jie-jue-redis-search-zai-passenger-xia-de-reconnect-cuo-wu/"/>
    <updated>2012-11-17T18:12:00+08:00</updated>
    <id>http://jimhj.github.com/blog/2012/11/17/jie-jue-redis-search-zai-passenger-xia-de-reconnect-cuo-wu</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/huacnlee/redis-search">redis-search</a> 是一款基于 Redis 的高效搜索组件, 使用起来非常方便, 效果也非常不错, 但是偶尔搜索的时候有这个错误:</p>

<p><code>Tried to use a connection from a child process without reconnecting. You need to reconnect to Redis after forking.</code></p>

<p>这个错误是如何产生的呢？
我看了一下 redis-rb 的 unicorn example，找到了这个：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="nb">require</span> <span class="s2">&quot;redis&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">worker_processes</span> <span class="mi">3</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># If you set the connection to Redis *before* forking,</span>
</span><span class='line'>  <span class="c1"># you will cause forks to share a file descriptor.</span>
</span><span class='line'>  <span class="c1">#</span>
</span><span class='line'>  <span class="c1"># This causes a concurrency problem by which one fork</span>
</span><span class='line'>  <span class="c1"># can read or write to the socket while others are</span>
</span><span class='line'>  <span class="c1"># performing other operations.</span>
</span><span class='line'>  <span class="c1">#</span>
</span><span class='line'>  <span class="c1"># Most likely you&#39;ll be getting ProtocolError exceptions</span>
</span><span class='line'>  <span class="c1"># mentioning a wrong initial byte in the reply.</span>
</span><span class='line'>  <span class="c1">#</span>
</span><span class='line'>  <span class="c1"># Thus we need to connect to Redis after forking the</span>
</span><span class='line'>  <span class="c1"># worker processes.</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">after_fork</span> <span class="k">do</span> <span class="o">|</span><span class="n">server</span><span class="p">,</span> <span class="n">worker</span><span class="o">|</span>
</span><span class='line'>    <span class="no">Redis</span><span class="o">.</span><span class="n">current</span><span class="o">.</span><span class="n">quit</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后我试着找资料写了一个 PhusionPassenger 的解决方案</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="c1"># config/initializers/redis_search.rb</span>
</span><span class='line'>  <span class="nb">require</span> <span class="s2">&quot;redis&quot;</span>
</span><span class='line'>  <span class="nb">require</span> <span class="s2">&quot;redis-namespace&quot;</span>
</span><span class='line'>  <span class="nb">require</span> <span class="s2">&quot;redis-search&quot;</span>
</span><span class='line'>  <span class="c1"># don&#39;t forget change namespace</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">defined?</span><span class="p">(</span><span class="no">PhusionPassenger</span><span class="p">)</span>
</span><span class='line'>    <span class="no">PhusionPassenger</span><span class="o">.</span><span class="n">on_event</span><span class="p">(</span><span class="ss">:starting_worker_process</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">forked</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">forked</span>
</span><span class='line'>        <span class="no">Redis</span><span class="o">.</span><span class="n">current</span><span class="o">.</span><span class="n">client</span><span class="o">.</span><span class="n">reconnect</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="no">Redis</span><span class="o">.</span><span class="n">current</span> <span class="o">=</span> <span class="no">Redis</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:host</span> <span class="o">=&gt;</span> <span class="s2">&quot;127.0.0.1&quot;</span><span class="p">,</span><span class="ss">:port</span> <span class="o">=&gt;</span> <span class="s2">&quot;6379&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">redis</span> <span class="o">=</span> <span class="no">Redis</span><span class="o">.</span><span class="n">current</span>
</span><span class='line'>  <span class="n">redis</span><span class="o">.</span><span class="n">select</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># We suggest you use a special db in Redis, when you need to clear all data, you can use flushdb command to clear them.</span>
</span><span class='line'>  <span class="c1"># </span>
</span><span class='line'>  <span class="c1"># Give a special namespace as prefix for Redis key, when your have more than one project used redis-search, this config will make them work fine.</span>
</span><span class='line'>  <span class="n">redis</span> <span class="o">=</span> <span class="no">Redis</span><span class="o">::</span><span class="no">Namespace</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;wakmj:redis_search&quot;</span><span class="p">,</span> <span class="ss">:redis</span> <span class="o">=&gt;</span> <span class="n">redis</span><span class="p">)</span>
</span><span class='line'>  <span class="no">Redis</span><span class="o">::</span><span class="no">Search</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">redis</span> <span class="o">=</span> <span class="n">redis</span>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">complete_max_length</span> <span class="o">=</span> <span class="mi">100</span>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">pinyin_match</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>    <span class="c1"># use rmmseg, true to disable it, it can save memroy</span>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">disable_rmmseg</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>好了，重新启动，现在没有如上的错误了。
参考链接：<a href="https://github.com/redis/redis-rb/blob/master/lib/redis/client.rb#L277">https://github.com/redis/redis-rb/blob/master/lib/redis/client.rb#L277</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="http://jimhj.github.com/blog/2012/11/17/new-post/"/>
    <updated>2012-11-17T17:07:00+08:00</updated>
    <id>http://jimhj.github.com/blog/2012/11/17/new-post</id>
    <content type="html"><![CDATA[<p>  之前博客在Heroku上面，经常被大墙墙掉不说，还慢的发指，还是迁移到 Github 上面来，稳定又免费，何乐而不为呢？</p>
]]></content>
  </entry>
  
</feed>
